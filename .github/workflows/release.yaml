name: Release

on:
  push:
    tags:
    - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build-unity:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    # set release tag(*.*.*) to env.GIT_TAG
    - run: echo ::set-env name=GIT_TAG::${GITHUB_REF#refs/tags/}
    - name: Create meta list
      working-directory: VContainer
      run: |
        echo Assets/VContainer/Runtime.meta >> metaList
        find Assets/VContainer/Runtime -name \*.meta >> metaList
        echo Assets/VContainer/Editor.meta >> metaList
        find Assets/VContainer/Editor -name \*.meta >> metaList
    - uses: pCYSl5EDgo/create-unitypackage@master
      with:
        package-path: VContainer.${{ env.GIT_TAG }}.unitypackage
        package-path: VContainer.unitypackage
        include-files: VContainer/metaList
    - uses: actions/upload-artifact@v2
      with:
        path: VContainer.${{ env.GIT_TAG }}.unitypackage

  create-release:
    needs: [build-unity]
    runs-on: ubuntu-latest
    steps:
      - run: echo ::set-env name=GIT_TAG::${GITHUB_REF#refs/tags/}

      # Create Releases
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Ver.${{ github.ref }}

      # Download(All) Artifacts to current directory
      - uses: actions/download-artifact@v2-preview

      # Upload to Releases(unitypackage)
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./VContainer.${{ env.GIT_TAG }}.unitypackage/UniTask.${{ env.GIT_TAG }}.unitypackage
          asset_name: VContainer.${{ env.GIT_TAG }}.unitypackage
          asset_content_type: application/octet-stream
